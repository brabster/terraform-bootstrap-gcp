name: Docker Image CI

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 4 * * *'
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - requirements.txt
      - .github/**
      - scripts/**

jobs:
  build_and_load:
    runs-on: ubuntu-latest # maintained by GitHub
    permissions:
      contents: read
    outputs:
      image_meta: ${{ steps.meta.outputs.json }}
    steps:
    - uses: actions/checkout@v3 # maintained by GitHub

    - name: Log in to the Container registry
      uses: docker/login-action@v2 # maintained by Docker
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4 # maintained by Docker
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=schedule,pattern={{date 'YYYY-MM-DD'}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and load Docker image
      uses: docker/build-push-action@v4 # maintained by Docker
      with:
        context: .
        load: true
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VCS_REF=${{ github.sha }}
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

  echo_output:
    runs-on: ubuntu-latest # maintained by GitHub
    needs: build_and_load
    steps:
      - name: Echo image tags
        run: echo "${{ needs.build_and_load.outputs.image_meta }}"

  osv_scan:
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.0.3  # maintained by Google
    permissions:
      contents: read
      actions: read
      security-events: write
    needs: build_and_load
    with:
      scan-args: scan image ${{ fromJSON(needs.build_and_load.outputs.image_meta).tags[0] }}

  image_test:
    runs-on: ubuntu-latest # maintained by GitHub
    needs: build_and_load
    steps:
      - name: test
        run: |
          docker run --rm ${{ fromJSON(needs.build_and_load.outputs.image_meta).tags[0] }} bash -c " \
            set -e && \
            echo '--- Checking Terraform ---' && terraform --version && \
            echo '--- Checking gcloud ---' && gcloud --version && \
            echo '--- Checking Python ---' && python --version \
          "

  publish:
    runs-on: ubuntu-latest # maintained by GitHub
    permissions:
      packages: write
      security-events: write
    needs:
      - build_and_load
      - osv_scan
      - image_test
    steps:
    - name: Push Docker image
      run: |
        echo "${{ needs.build_and_load.outputs.image_tags }}" | sed 's/,/\n/g' | xargs -I {} docker push {}

