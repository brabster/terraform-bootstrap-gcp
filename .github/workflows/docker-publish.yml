name: Docker Image CI

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 4 * * *'
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - requirements.txt
      - .github/**
      - scripts/**

jobs:
  build_and_load:
    runs-on: ubuntu-latest # maintained by GitHub
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3 # maintained by GitHub

    - name: Log in to the Container registry
      uses: docker/login-action@v3 # maintained by Docker
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and export Docker image
      run: |
        docker build -t candidate_image:latest .
        docker save candidate_image:latest -o ${{ runner.temp }}/candidate_image.tar
      
    - name: Upload image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: candidate_image
        path: ${{ runner.temp }}/candidate_image.tar

  osv_scan:
    # see https://github.com/google/osv-scanner-action/blob/main/.github/workflows/osv-scanner-reusable.yml
    runs-on: ubuntu-latest # maintained by GitHub

    permissions:
      actions: read
      contents: read
      security-events: write
    needs: build_and_load
    steps:

    - uses: actions/checkout@v3 # maintained by GitHub

    - name: Download image artifact
      uses: actions/download-artifact@v4 # maintained by GitHub
      with:
        name: candidate_image
        path: ${{ runner.temp }}

    - name: Scan for vulnerabilities
      continue-on-error: true
      run: |
        scripts/install_osv_scanner

        docker load -i ${{ runner.temp }}/candidate_image.tar

        osv-scanner scan image candidate_image:latest --format=sarif --output=osv_scan_results.sarif

    - name: Upload OSV scan results
      id: upload_artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: osv_scan_results_sarif
        path: osv_scan_results.sarif
        retention-days: 5

    - name: Upload OSV scan results to Code Scanning
      if: ${{ always() }}
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: osv_scan_results.sarif

    - name: Check if artifact upload failed
      if: ${{ always() && steps.upload_artifact.outcome == 'failure' }}
      run: |
        echo "::error::Artifact upload failed. This is most likely caused by a error during scanning earlier in the workflow."
        exit 1

  image_test:
    runs-on: ubuntu-latest # maintained by GitHub
    needs: build_and_load
    steps:

      - name: Download image artifact
        uses: actions/download-artifact@v4 # maintained by GitHub
        with:
          name: candidate_image
          path: ${{ runner.temp }}

      - name: test
        run: |
          docker load -i ${{ runner.temp }}/candidate_image.tar
          docker run --rm candidate_image:latest bash -c " \
            set -e && \
            echo '--- Checking Terraform ---' && terraform --version && \
            echo '--- Checking gcloud ---' && gcloud --version && \
            echo '--- Checking Python ---' && python --version \
          "

  publish:
    runs-on: ubuntu-latest # maintained by GitHub
    permissions:
      packages: write
    needs:
      - build_and_load
      - osv_scan
      - image_test
    steps:

    - name: Download image artifact
      uses: actions/download-artifact@v4 # maintained by GitHub
      with:
        name: candidate_image
        path: ${{ runner.temp }}

    - name: Push tagged image
      env:
        DOCKER_SHA_TAG: ghcr.io/${{ github.repository }}:${{ github.sha }}
        DOCKER_LATEST_TAG: ghcr.io/${{ github.repository }}:latest
      run: |
        docker load -i ${{ runner.temp }}/candidate_image.tar
        for tag in $DOCKER_SHA_TAG $DOCKER_LATEST_TAG; do
          docker tag candidate_image:latest $tag
          docker push $tag
        done

